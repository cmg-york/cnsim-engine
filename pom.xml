<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ca.yorku.cmg</groupId>
  <artifactId>cnsim-engine</artifactId>
  <version>0.0.2-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>CNSim Engine</name>
  <description>A simulation engine for consensus networks</description>
  <!-- FIXME change it to the project's website -->
  <url>http://cmg-yorku.github.io/cnsim-engine</url>
  
  <developers>
    <developer>
    <id>nina</id>
    <name>Nina Dang</name>
    <email>nina2022@my.yorku.ca</email>
  </developer>
  <developer>
    <id>liaskos</id>
    <name>Sotirios Liaskos</name>
    <email>liaskos@yorku.ca</email>
  </developer>
      <developer>
    <id>kasra</id>
    <name>Kasra Zarei</name>
    <email>kasrazarei39@gmail.com</email>
  </developer>

</developers>
  
    <contributors>
    <contributor>
    <name>Some One</name>
    <email>some@one.ca</email>
  </contributor>
</contributors>
  
  
	<organization>
  <name>Conceptual Modeling Group @ York University</name>
  <url>https://cmg.info.yorku.ca/</url>
</organization>



  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>21</maven.compiler.release>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.11.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- JUnit 5 Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Optionally: parameterized tests support -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 4 Dependency -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit Vintage Engine -->
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.11.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
               <configuration>
        			<archive>
          				<manifest>
            				<!-- automatically include Implementation-Version, Implementation-Title, etc. -->
            				<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
          				</manifest>
        			</archive>
      			</configuration>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
      <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.6.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    
    
      <resources>
    <resource>
      <directory>src/main/resources</directory>
      <excludes>
        <exclude>**/*</exclude>
      </excludes>
    </resource>
   </resources>
    
    
<plugins>
	    <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>3.10.1</version>
	        <configuration>
	        </configuration>
	    </plugin>
	    
	    
	    		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-site-plugin</artifactId>
		  <version>3.21.0</version>
		        <!-- <configuration>
        <outputDirectory>${basedir}/docs</outputDirectory>
      </configuration> -->
      
        
		</plugin>
		
		
		 <plugin>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-module-markdown</artifactId>
            <version>2.0.0</version> 
        </plugin>
  
	    
	    
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.2</version>
        <configuration>
        <redirectTestOutputToFile>false</redirectTestOutputToFile>
          <forkCount>0</forkCount>
          <excludedGroups>exclude</excludedGroups>
          <excludes>
            <exclude>**/commandline/ConfigInitializerTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      
       <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.2.0</version>
        </plugin>
       
<!--        
		<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.11.1</version>
        <configuration>
        	<doclint>all,-missing</doclint>
        </configuration>
        <executions>
            <execution>
               <goals>
                  <goal>javadoc</goal>
               </goals>
                  <id>execution1</id>
                <phase>site</phase>
                </execution>
            </executions>
      </plugin>
    -->  
    
       
           <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-antrun-plugin</artifactId>
      <version>3.1.0</version>
      <executions>
        <execution>
          <id>publish-docs</id>
          <goals>
            <goal>run</goal>
          </goals>
          <configuration>
            <target>
              <echo message="Copying site from target/site to docs/"/>
              
              <!-- Clean doc/ first to avoid stale files -->
              <delete dir="${basedir}/docs"/>
              
              <!-- Recreate doc/ folder -->
              <mkdir dir="${basedir}/docs"/>
              
              <!-- Copy everything from target/site -->
              <copy todir="${basedir}/docs" overwrite="true">
                <fileset dir="${project.build.directory}/site"/>
              </copy>
            </target>
          </configuration>
        </execution>
      </executions>
    </plugin>
       
       
    </plugins>

  </build>
  
    <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.5.0</version>
      </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-javadoc-plugin</artifactId>
      <version>3.11.1</version>
      <configuration>
      <source>21</source>
        <doclint>none</doclint>
      </configuration>
    </plugin>

    </plugins>


  </reporting>


</project>
